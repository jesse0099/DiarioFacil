/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ulatina.interfaces;

import javax.swing.table.DefaultTableModel;
import edu.ulatina.entidades.Producto;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author gavaf
 */
public class pnlAdminInventario extends javax.swing.JPanel {

    DefaultTableModel model;
    //Limpia todos los text fields
    public void Clear(){
        txtNombre.setText(null);
        //txtCodigo.setText(null);
        txtPrecio.setText(null);
        txtExistencias.setText(null);
        txtExistenciaMin.setText(null);
    }
    
    public pnlAdminInventario() {
        initComponents();
        
        model = (DefaultTableModel) tableProductos.getModel();
        initInventario();
        initFiltros();
        
    }
    
    private void initFiltros(){
        cbFiltros.removeAllItems();
        cbFiltros.addItem("Codigo");
        cbFiltros.addItem("Nombre");
        cbFiltros.addItem("Precio");
        cbFiltros.addItem("Existencias");
    }
    
    public void initInventario(){
        model  = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row,int column){
                return false;
            }
        };
        
        model.addColumn("Codigo");
        model.addColumn("Nombre");
        model.addColumn("Precio");
        model.addColumn("Existencias");
        model.addColumn("Existencia Mínima");
        //Llena la tabla con constantes
        for(Producto prod: DiarioFacilTester.diarioFacil.getProductos()){
          model.addRow(new String[]{String.valueOf(DiarioFacilTester.diarioFacil.getProductos().indexOf(prod)), prod.getNombre(), Double.toString(prod.getPrecio()), Integer.toString(prod.getExistencias()), Integer.toString(prod.getExistenciaMin())});
        }
        tableProductos.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        txtExistenciaMin = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtExistencias = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProductos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnEli = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rSMTextFull1 = new rojeru_san.RSMTextFull();
        cbFiltros = new rojerusan.RSComboMetro();

        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(957, 800));

        jLabel6.setText("Existencia Mínima:");

        btnEdit.setText("Editar");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnAdd.setText("Agregar");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        tableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Precio", "Existencias", "Existencia Mínima"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProductos);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Productos");

        btnEli.setText("Eliminar");
        btnEli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre del Producto:");

        jLabel4.setText("Precio:");

        jLabel5.setText("Existencias:");

        rSMTextFull1.setFont(new java.awt.Font("Roboto Bold", 1, 12)); // NOI18N
        rSMTextFull1.setPlaceholder("Buscar...");
        rSMTextFull1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSMTextFull1ActionPerformed(evt);
            }
        });
        rSMTextFull1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rSMTextFull1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rSMTextFull1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(cbFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rSMTextFull1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(85, 85, 85))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(116, 116, 116)
                                    .addComponent(btnEli, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(22, 22, 22)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(50, 50, 50)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtExistenciaMin, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                                    .addComponent(txtExistencias))))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(344, 344, 344)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rSMTextFull1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtExistencias, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtExistenciaMin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEli, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(278, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if(tableProductos.getRowCount()>0){
            if(tableProductos.getSelectedRow()>-1){
                if(txtNombre.getText().isEmpty() || txtPrecio.getText().isEmpty() || txtExistencias.getText().isEmpty()|| txtExistenciaMin.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Todos los campos son requeridos", "Sys", JOptionPane.ERROR_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
                }else{
                    //Editar
                    if(DiarioFacilTester.diarioFacil.edit(tableProductos.getSelectedRow(), new Producto(txtNombre.getText(),tableProductos.getSelectedRow()+1, Double.parseDouble(txtPrecio.getText()), Integer.parseInt(txtExistencias.getText()), Integer.parseInt(txtExistenciaMin.getText())))){
                        initInventario();
                    }else{
                        JOptionPane.showMessageDialog(null, "Campos con informacion repetida", "Sys", JOptionPane.ERROR_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
                    }
                }
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(txtNombre.getText().isEmpty() || txtPrecio.getText().isEmpty() || txtExistencias.getText().isEmpty()|| txtExistenciaMin.getText().isEmpty()){
            //Mensaje de error
             JOptionPane.showMessageDialog(null, "Todos los campos son requeridos", "Sys", JOptionPane.ERROR_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
          }
          else{
            //Agregar 
            if(DiarioFacilTester.diarioFacil.create(new Producto(txtNombre.getText(),tableProductos.getRowCount()+1,Double.parseDouble(txtPrecio.getText()),Integer.parseInt(txtExistencias.getText()),Integer.parseInt(txtExistenciaMin.getText())))){
                //Mensaje de agregado correctamente
                model.insertRow(model.getRowCount(), new Object[] {tableProductos.getRowCount()+1, txtNombre.getText(), txtPrecio.getText(), txtExistencias.getText(), txtExistenciaMin.getText()});
                initInventario();
            }else{
                //Mensaje de error
                 JOptionPane.showMessageDialog(null, "Campos con informacion repetida", "Sys", JOptionPane.ERROR_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
            }
          }


//Agrega una fila a la tabla
        /*model.insertRow(model.getRowCount(), new Object[] {tableProductos.getRowCount()+1, txtNombre.getText(), txtPrecio.getText(), txtExistencias.getText(), txtExistenciaMin.getText()});

        //Agrega un producto con los datos que hay en la tabla
        Producto producto = new Producto(txtNombre.getText(), tableProductos.getRowCount()+1, Double.parseDouble(txtPrecio.getText()), Integer.parseInt(txtExistencias.getText()), Integer.parseInt(txtExistenciaMin.getText()));
        DiarioFacilTester.diarioFacil.addProducto(producto);
        //Limpia los espacios
        Clear();*/
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        Clear();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tableProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductosMouseClicked
        //Muestra los datos de la fila seleccionada
        if(tableProductos.getRowCount()>0)
        if(tableProductos.getSelectedRow()>-1){
            //txtCodigo.setText(String.valueOf(tableProductos.getValueAt(tableProductos.getSelectedRow(), 0)));
            txtNombre.setText(String.valueOf(tableProductos.getValueAt(tableProductos.getSelectedRow(), 1)));
            txtPrecio.setText(String.valueOf(tableProductos.getValueAt(tableProductos.getSelectedRow(), 2)));
            txtExistencias.setText(String.valueOf(tableProductos.getValueAt(tableProductos.getSelectedRow(), 3)));
            txtExistenciaMin.setText(String.valueOf(tableProductos.getValueAt(tableProductos.getSelectedRow(), 4)));
        }
    }//GEN-LAST:event_tableProductosMouseClicked

    private void btnEliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliActionPerformed
        if(tableProductos.getRowCount()>0){
            if(tableProductos.getSelectedRow()>-1){
                int respuesta  = JOptionPane.showConfirmDialog(null, "¿Seguro que desea eliminar este producto?", "Sys", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
                if(respuesta  == JOptionPane.YES_OPTION){
                    DiarioFacilTester.diarioFacil.delete(tableProductos.getSelectedRow(),new Producto());
                    initInventario();
                }
            }
        }
        Clear();
        
        
        /*model.removeRow(tableProductos.getSelectedRow());    
        Clear();*/

    }//GEN-LAST:event_btnEliActionPerformed

    private void rSMTextFull1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rSMTextFull1KeyPressed

    }//GEN-LAST:event_rSMTextFull1KeyPressed

    private void rSMTextFull1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSMTextFull1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rSMTextFull1ActionPerformed

    private void rSMTextFull1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rSMTextFull1KeyTyped
              model  = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row,int column){
                return false;
            }
        };
        model.addColumn("Codigo");
        model.addColumn("Nombre");
        model.addColumn("Precio");
        model.addColumn("Existencias");
        model.addColumn("Existencia Mínima");
        if(cbFiltros.getSelectedItem().toString().equals("Codigo")){         
            for(Object prod : DiarioFacilTester.diarioFacil.read("codigo", rSMTextFull1.getText(), DiarioFacilTester.diarioFacil.getProductos())){
              model.addRow(new String[]{String.valueOf(DiarioFacilTester.diarioFacil.getProductos().indexOf((Producto)prod)), ((Producto)prod).getNombre(),Double.toString(((Producto)prod).getPrecio()),Integer.toString(((Producto)prod).getExistencias()),Integer.toString(((Producto)prod).getExistenciaMin())});
            }
            tableProductos.setModel(model);
        }else if (cbFiltros.getSelectedItem().toString().equals("Existencias")){
            for(Object prod : DiarioFacilTester.diarioFacil.read("existencias", rSMTextFull1.getText(), DiarioFacilTester.diarioFacil.getProductos())){
              model.addRow(new String[]{String.valueOf(DiarioFacilTester.diarioFacil.getProductos().indexOf((Producto)prod)), ((Producto)prod).getNombre(),Double.toString(((Producto)prod).getPrecio()),Integer.toString(((Producto)prod).getExistencias()),Integer.toString(((Producto)prod).getExistenciaMin())});
            }
            tableProductos.setModel(model);
        }else if(cbFiltros.getSelectedItem().toString().equals("Precio")){
            for(Object prod : DiarioFacilTester.diarioFacil.read("precio", rSMTextFull1.getText(), DiarioFacilTester.diarioFacil.getProductos())){
              model.addRow(new String[]{String.valueOf(DiarioFacilTester.diarioFacil.getProductos().indexOf((Producto)prod)), ((Producto)prod).getNombre(),Double.toString(((Producto)prod).getPrecio()),Integer.toString(((Producto)prod).getExistencias()),Integer.toString(((Producto)prod).getExistenciaMin())});
            }
            tableProductos.setModel(model); 
        }else{
            for(Object prod : DiarioFacilTester.diarioFacil.read("nombre", rSMTextFull1.getText(), DiarioFacilTester.diarioFacil.getProductos())){
              model.addRow(new String[]{String.valueOf(DiarioFacilTester.diarioFacil.getProductos().indexOf((Producto)prod)), ((Producto)prod).getNombre(),Double.toString(((Producto)prod).getPrecio()),Integer.toString(((Producto)prod).getExistencias()),Integer.toString(((Producto)prod).getExistenciaMin())});
            }
            tableProductos.setModel(model); 
        }
    }//GEN-LAST:event_rSMTextFull1KeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEli;
    private javax.swing.JButton btnLimpiar;
    private rojerusan.RSComboMetro cbFiltros;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private rojeru_san.RSMTextFull rSMTextFull1;
    private javax.swing.JTable tableProductos;
    private javax.swing.JTextField txtExistenciaMin;
    private javax.swing.JTextField txtExistencias;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
