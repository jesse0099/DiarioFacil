/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ulatina.interfaces;
import edu.ulatina.entidades.Administrador;
import edu.ulatina.entidades.Cliente;
import edu.ulatina.entidades.Constantes;
import edu.ulatina.entidades.DiarioFacil;
import edu.ulatina.entidades.Permiso;
import edu.ulatina.entidades.Usuario;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Daniel
 */
public class pnlAdminClientes extends javax.swing.JPanel {

    DefaultTableModel modelo  = new DefaultTableModel(){
     @Override
        public boolean isCellEditable(int row, int column) {
            return false;
    }
    };
    
    public pnlAdminClientes()  {
        initComponents();
        load();
        addFilters();
        this.swEstado.setActivado(false);
    }

    public void load(){
          modelo  = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row,int column){
                return false;
            }
        };
        modelo.addColumn("NoRegistro");
        modelo.addColumn("Cédula");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Email");
        modelo.addColumn("Usuario");
        modelo.addColumn("Contraseña");
        modelo.addColumn("Estado"); 
        
      
        for(Usuario client  : DiarioFacilTester.diarioFacil.getClientes()){
            
          if(client instanceof Cliente){
              
          modelo.addRow(new String[]{String.valueOf(DiarioFacilTester.diarioFacil.getClientes().indexOf(client)), client.getCedula(),client.getNombre(),client.getApellido(),client.getEmail(),client.getNombreUsuario(),client.getContrasena(),String.valueOf(((Cliente)client).getActivo())});
        
          }
            
        }
        tblClientes.setModel(modelo);
        
    }
    
      private void addFilters(){
        cbFiltros.removeAllItems();
        cbFiltros.addItem("cedula");
        cbFiltros.addItem("email");
        cbFiltros.addItem("usuario");
        cbFiltros.addItem("nombre");
    }
    
    
    public void refresh(){
        load();
    }
    
    public void checkEstado(boolean estado){
        if(estado != true){
            this.swEstado.setActivado(true);
            this.lblEstado.setText("Activo!");
        }else{
            this.swEstado.setActivado(false);
             this.lblEstado.setText("Inactivo!");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        txtFiltro = new rojeru_san.RSMTextFull();
        cbFiltros = new rojerusan.RSComboMetro();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new rojeru_san.RSMTextFull();
        jLabel3 = new javax.swing.JLabel();
        txtApellido = new rojeru_san.RSMTextFull();
        jLabel4 = new javax.swing.JLabel();
        txtCedula = new rojeru_san.RSMTextFull();
        jLabel5 = new javax.swing.JLabel();
        txtUser = new rojeru_san.RSMTextFull();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new rojeru_san.RSMTextFull();
        jLabel8 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtContra = new rojeru_san.RSMTextFull();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        swEstado = new rojerusan.RSSwitch();
        lblEstado = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btnEdit = new rojerusan.RSButtonIconI();
        btnDelete = new rojerusan.RSButtonIconI();

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClientes);

        txtFiltro.setFont(new java.awt.Font("Roboto Bold", 1, 12)); // NOI18N
        txtFiltro.setPlaceholder("Buscar...");
        txtFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroActionPerformed(evt);
            }
        });
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroKeyTyped(evt);
            }
        });

        jLabel2.setText("Nombre:");

        txtNombre.setFont(new java.awt.Font("Roboto Bold", 1, 12)); // NOI18N
        txtNombre.setPlaceholder("Pablo...");
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel3.setText("Apellidos:");

        txtApellido.setFont(new java.awt.Font("Roboto Bold", 1, 12)); // NOI18N
        txtApellido.setPlaceholder("Gutierrez...");
        txtApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoActionPerformed(evt);
            }
        });

        jLabel4.setText("Cedula:");

        txtCedula.setFont(new java.awt.Font("Roboto Bold", 1, 12)); // NOI18N
        txtCedula.setPlaceholder("10250498...");
        txtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaActionPerformed(evt);
            }
        });

        jLabel5.setText("Nombre de Usuario:");

        txtUser.setFont(new java.awt.Font("Roboto Bold", 1, 12)); // NOI18N
        txtUser.setPlaceholder("PabloG10....");
        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        jLabel6.setText("Contraseña:");

        txtEmail.setFont(new java.awt.Font("Roboto Bold", 1, 12)); // NOI18N
        txtEmail.setPlaceholder("ejemplo@ejemplo.com");
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel8.setText("Datos Personales");

        jLabel16.setText("Email");

        txtContra.setFont(new java.awt.Font("Roboto Bold", 1, 12)); // NOI18N
        txtContra.setPlaceholder("123...");
        txtContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtContra, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtContra, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabel9.setText("Estado del cliente");

        swEstado.setColorFondoActivado(new java.awt.Color(0, 153, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(lblEstado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 55, Short.MAX_VALUE)
                .addComponent(swEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(90, 90, 90))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(51, 51, 51)
                .addComponent(swEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(lblEstado)
                .addGap(0, 78, Short.MAX_VALUE))
        );

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ulatina/ejemplos/img/icons8-edit-24.png"))); // NOI18N
        btnEdit.setText("Editar");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ulatina/ejemplos/img/icons8-delete-24.png"))); // NOI18N
        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 196, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)))
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(cbFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseClicked
       String in = null;
        if( tblClientes.getRowCount()>0)
        if( tblClientes.getSelectedRow()>-1){
            in= (String)  tblClientes.getValueAt( tblClientes.getSelectedRow(), 0);
            txtCedula.setText(String.valueOf( tblClientes.getValueAt( tblClientes.getSelectedRow(), 1)));
            txtNombre.setText(String.valueOf( tblClientes.getValueAt( tblClientes.getSelectedRow(), 2)));
            txtApellido.setText(String.valueOf( tblClientes.getValueAt( tblClientes.getSelectedRow(), 3)));
            txtEmail.setText(String.valueOf( tblClientes.getValueAt( tblClientes.getSelectedRow(), 4)));
            txtUser.setText(String.valueOf( tblClientes.getValueAt( tblClientes.getSelectedRow(),5)));
            txtContra.setText(String.valueOf( tblClientes.getValueAt( tblClientes.getSelectedRow(),6)));
            String estS = String.valueOf(tblClientes.getValueAt( tblClientes.getSelectedRow(),6));
            boolean e = Boolean.parseBoolean(estS);
            checkEstado(e);
            this.repaint();
        }
         this.repaint();
    }//GEN-LAST:event_tblClientesMouseClicked

    private void txtFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroActionPerformed

    private void txtFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyTyped
        // TODO add your handling code here:
        modelo  = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row,int column){
                return false;
            }
        };
        modelo.addColumn("NoRegistro");
        modelo.addColumn("Cédula");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Email");
        modelo.addColumn("Usuario");
        modelo.addColumn("Contraseña");
        
        if(cbFiltros.getSelectedItem().toString().equals("cedula")){
            for(Object user : DiarioFacilTester.diarioFacil.read("cedula", txtFiltro.getText(), DiarioFacilTester.diarioFacil.getClientes())){
                if(user instanceof Cliente){
                    modelo.addRow(new String[]{String.valueOf(DiarioFacilTester.diarioFacil.getClientes().indexOf((Usuario)user)), ((Usuario)user).getCedula(),((Usuario)user).getNombre(),((Usuario)user).getApellido(),((Usuario)user).getEmail(),((Usuario)user).getNombreUsuario(),((Usuario)user).getContrasena(),String.valueOf(((Cliente)user).getActivo())});
                }
            }
            this. tblClientes.setModel(modelo);

        }else if (cbFiltros.getSelectedItem().toString().equals("email")){
            for(Object user : DiarioFacilTester.diarioFacil.read("email", txtFiltro.getText(), DiarioFacilTester.diarioFacil.getClientes())){
                if(user instanceof Cliente){
                    modelo.addRow(new String[]{String.valueOf(DiarioFacilTester.diarioFacil.getClientes().indexOf((Usuario)user)), ((Usuario)user).getCedula(),((Usuario)user).getNombre(),((Usuario)user).getApellido(),((Usuario)user).getEmail(),((Usuario)user).getNombreUsuario(),((Usuario)user).getContrasena(),String.valueOf(((Cliente)user).getActivo())});
                }
            }
            this. tblClientes.setModel(modelo);
        }else if (cbFiltros.getSelectedItem().toString().equals("usuario")){
            for(Object user : DiarioFacilTester.diarioFacil.read("usuario", txtFiltro.getText(), DiarioFacilTester.diarioFacil.getClientes())){
                if(user instanceof Cliente){
                    modelo.addRow(new String[]{String.valueOf(DiarioFacilTester.diarioFacil.getClientes().indexOf((Usuario)user)), ((Usuario)user).getCedula(),((Usuario)user).getNombre(),((Usuario)user).getApellido(),((Usuario)user).getEmail(),((Usuario)user).getNombreUsuario(),((Usuario)user).getContrasena(),String.valueOf(((Cliente)user).getActivo())});
                }
            }
            this. tblClientes.setModel(modelo);
        }else{
            for(Object user : DiarioFacilTester.diarioFacil.read("nombre", txtFiltro.getText(), DiarioFacilTester.diarioFacil.getClientes())){
                if(user instanceof Cliente){
                    modelo.addRow(new String[]{String.valueOf(DiarioFacilTester.diarioFacil.getClientes().indexOf((Usuario)user)), ((Usuario)user).getCedula(),((Usuario)user).getNombre(),((Usuario)user).getApellido(),((Usuario)user).getEmail(),((Usuario)user).getNombreUsuario(),((Usuario)user).getContrasena(),String.valueOf(((Cliente)user).getActivo())});
                }
            }
            this. tblClientes.setModel(modelo);
        }
            this.repaint();
    }//GEN-LAST:event_txtFiltroKeyTyped

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoActionPerformed

    private void txtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaActionPerformed

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContraActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       List<Cliente> DummyList = new ArrayList<>();
        if(tblClientes.getRowCount()>0){
            if(tblClientes.getSelectedRow()>-1){
                
                String index = (String)  tblClientes.getValueAt( tblClientes.getSelectedRow(), 0);
                
                int respuesta  = JOptionPane.showConfirmDialog(null, "Seguro desea eliminar este proveedor?", "Sys", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
                if(respuesta  == JOptionPane.YES_OPTION){
                 /* Usuario client=  DiarioFacilTester.diarioFacil.getClientes().get(Integer.parseInt(index);
                  /*DummyList = ((Cliente)client).get*/
                    DiarioFacilTester.diarioFacil.deleteUser(Integer.parseInt(index));
                    load();
                }
            }
        }
         this.repaint();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date(System.currentTimeMillis());
        if(tblClientes.getRowCount()>0){
            if(tblClientes.getSelectedRow()>-1){
                if(txtNombre.getText().isEmpty() || txtApellido.getText().isEmpty() || txtCedula.getText().isEmpty()|| txtUser.getText().isEmpty() || txtEmail.getText().isEmpty() || txtContra.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Todos los campos son requeridos", "Sys", JOptionPane.ERROR_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
                }else{
                    //Editar
                    Cliente client = new Cliente(txtCedula.getText(),txtNombre.getText(),txtApellido.getText(),txtEmail.getText(),txtUser.getText(),txtContra.getText(),"Cliente",date);
                    if(this.swEstado.isActivado()){
                        client.setActivo(true);
                    }else{
                        client.setActivo(false);
                    }
                   
                    if(DiarioFacilTester.diarioFacil.edit(Integer.parseInt(tblClientes.getValueAt(tblClientes.getSelectedRow(),0).toString()),client )){
                        load();
                         this.repaint();
                    }else{
                        JOptionPane.showMessageDialog(null, "Campos con informacion repetida", "Sys", JOptionPane.ERROR_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
                    }
                }
            }
        }
              
    }//GEN-LAST:event_btnEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSButtonIconI btnDelete;
    private rojerusan.RSButtonIconI btnEdit;
    private rojerusan.RSComboMetro cbFiltros;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEstado;
    private rojerusan.RSSwitch swEstado;
    private javax.swing.JTable tblClientes;
    private rojeru_san.RSMTextFull txtApellido;
    private rojeru_san.RSMTextFull txtCedula;
    private rojeru_san.RSMTextFull txtContra;
    private rojeru_san.RSMTextFull txtEmail;
    private rojeru_san.RSMTextFull txtFiltro;
    private rojeru_san.RSMTextFull txtNombre;
    private rojeru_san.RSMTextFull txtUser;
    // End of variables declaration//GEN-END:variables

    void checkEdit() {
        
    }
}
