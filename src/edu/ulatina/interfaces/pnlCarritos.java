/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ulatina.interfaces;

import edu.ulatina.entidades.CarritoCompras;
import edu.ulatina.entidades.Categoria;
import edu.ulatina.entidades.Compra;
import edu.ulatina.entidades.Constantes;
import edu.ulatina.entidades.Item;
import edu.ulatina.entidades.Producto;
import edu.ulatina.entidades.Promocion;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.TableView.TableRow;

/**
 *
 * @author Nvidi
 */
public class pnlCarritos extends javax.swing.JPanel {
    DefaultTableModel  model = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row,int column){
            return false;
        }
    };
    /**
     * Creates new form pnlCarritos
     */
    public pnlCarritos() {
        initComponents();
    }
    
    private Double calcSubTotal(){
       Double returned =0.00;
       for(int i=0;i<tblCarrito.getRowCount();i++){
           returned = returned+ Double.parseDouble(tblCarrito.getValueAt(i,5).toString());
       }
       return returned;
    }
    
    public void loadCombo(){
        cbCarritos.removeAllItems();
        for(CarritoCompras car : DiarioFacilTester.diarioFacil.carritosCompra(Constantes.USUARIOLOGUEADO)){
            cbCarritos.addItem(car.getNombreCarrito());
        }
    }
    
    public void cleanScreen(){
        lblCarritoNombre.setText("Nombre carrito");
        lblSubtotal.setText("000000");
        lblTotal.setText("00000");
    }
    
    public void loadTable(List<CarritoCompras> carritoSeleccionado){
        model = new DefaultTableModel(){
                @Override
                public boolean isCellEditable(int row,int column){
                    return false;
                }
            };
        model.addColumn("Consecutivo");
        model.addColumn("Producto");
        model.addColumn("Cantidad");
        model.addColumn("Precio unidad");
        model.addColumn("Comprado en promocion");
        model.addColumn("Sub total");
        tblCarrito.setModel(model);
        try{
            for(Item i: carritoSeleccionado.get(0).getProductos()){
                if(i.getProducto() instanceof  Promocion){
                    model.addRow(new Object[]{i.getConsecutivo(),i.getProducto().getNombre(),i.getCantidad(),((Promocion)(i.getProducto())).getPrecioPromocional(),true,((Promocion)(i.getProducto())).getPrecioPromocional()*i.getCantidad()});
                }else{
                    model.addRow(new Object[]{i.getConsecutivo(),i.getProducto().getNombre(),i.getCantidad(),i.getProducto().getPrecio(),false,i.getCantidad()*i.getProducto().getPrecio()}); 
                }
            } 
       
            tblCarrito.setModel(model);
            lblSubtotal.setText(calcSubTotal().toString());
            lblTotal.setText(String.valueOf(calcSubTotal()+(calcSubTotal()*0.13)));   
        }catch(Exception e){
            System.err.println(""+e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cbCarritos = new rojerusan.RSComboMetro();
        txtBuscarCarrito = new rojeru_san.RSMTextFull();
        rSButtonRiple1 = new rojeru_san.RSButtonRiple();
        txtNewCarrito = new rojeru_san.RSMTextFull();
        rSButtonRiple2 = new rojeru_san.RSButtonRiple();
        lblCarritoNombre = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarrito = new rojerusan.RSTableMetro();
        jLabel3 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnDelete = new rojerusan.RSButtonIconI();
        btnEdit = new rojerusan.RSButtonIconI();
        btnClean = new rojerusan.RSButtonIconI();
        btnClean1 = new rojerusan.RSButtonIconI();
        lblSubtotal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnClean2 = new rojerusan.RSButtonIconI();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBackground(new java.awt.Color(0, 112, 192));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MIS CARRITOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Carrito : ");

        cbCarritos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCarritosItemStateChanged(evt);
            }
        });

        txtBuscarCarrito.setPlaceholder("Producto...");
        txtBuscarCarrito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarCarritoKeyTyped(evt);
            }
        });

        rSButtonRiple1.setText("Buscar en el carrito ");
        rSButtonRiple1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonRiple1ActionPerformed(evt);
            }
        });

        txtNewCarrito.setPlaceholder("Nombre del nuevo carrito...");

        rSButtonRiple2.setText("Crear carrito");
        rSButtonRiple2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonRiple2ActionPerformed(evt);
            }
        });

        lblCarritoNombre.setBackground(new java.awt.Color(255, 255, 255));
        lblCarritoNombre.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCarritoNombre.setText("Compras semanales");

        tblCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCarrito);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Costo total del carrito : ");

        lblTotal.setBackground(new java.awt.Color(255, 255, 255));
        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotal.setText("000000");

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ulatina/ejemplos/img/icons8-delete-24.png"))); // NOI18N
        btnDelete.setText("Eliminar del carrito");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ulatina/ejemplos/img/icons8-edit-24.png"))); // NOI18N
        btnEdit.setText("Editar cantidad");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnClean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ulatina/ejemplos/img/icons8-clear-formatting-24.png"))); // NOI18N
        btnClean.setText("Limpiar carrito");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnClean1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ulatina/ejemplos/img/icons8-price-tag-24.png"))); // NOI18N
        btnClean1.setText("Comprar carrito");
        btnClean1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClean1ActionPerformed(evt);
            }
        });

        lblSubtotal.setBackground(new java.awt.Color(255, 255, 255));
        lblSubtotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSubtotal.setText("000000");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Sub total : ");

        btnClean2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ulatina/ejemplos/img/icons8-delete-bin-24.png"))); // NOI18N
        btnClean2.setText("Eliminar carrito");
        btnClean2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClean2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbCarritos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addComponent(txtNewCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rSButtonRiple2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(txtBuscarCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rSButtonRiple1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblCarritoNombre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnClean2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblTotal))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(53, 53, 53)
                                        .addComponent(lblSubtotal)
                                        .addGap(35, 35, 35))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnClean1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbCarritos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNewCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rSButtonRiple2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rSButtonRiple1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscarCarrito, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarritoNombre)
                    .addComponent(btnClean2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(lblSubtotal))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(lblTotal)))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClean1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(tblCarrito.getRowCount()>0){
            if(tblCarrito.getSelectedRow()>-1){
                //Metodo de eliminado
                int resultado =JOptionPane.showConfirmDialog(null, "Realmente desea eliminar este item?", "Sys", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-warning-shield-24.png"));
                if(resultado ==JOptionPane.YES_OPTION){
                    //Eliminar
                    if(DiarioFacilTester.diarioFacil.deleteItemCarrito(Integer.parseInt(tblCarrito.getValueAt(tblCarrito.getSelectedRow(), 0).toString()),lblCarritoNombre.getText(),Constantes.USUARIOLOGUEADO)){
                        loadTable(DiarioFacilTester.diarioFacil.carritoSeleccionado(cbCarritos.getSelectedItem().toString(),Constantes.USUARIOLOGUEADO));
                    }else{
                        JOptionPane.showMessageDialog(null,"Ocurrio un error,no pudo eliminarse el item","Sys",JOptionPane.INFORMATION_MESSAGE,new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
                    }
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if(tblCarrito.getRowCount()>0){
            if(tblCarrito.getSelectedRow()>-1){
                int resultado =JOptionPane.showConfirmDialog(null, "Realmente desea editar este item?", "Sys", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-warning-shield-24.png"));
                if(resultado == JOptionPane.YES_OPTION){
                    //Editar
                    int nuevaCantidad=-1;
                    int resultadoEdicion=-1;
                    SpinnerNumberModel modelNumber = new SpinnerNumberModel(1.0, 1.0, 100.0, 1.0);
                    JSpinner sp  = new JSpinner(modelNumber);
                    ((JSpinner.DefaultEditor) sp.getEditor()).getTextField().setEditable(false);
                    resultadoEdicion= JOptionPane.showConfirmDialog(null, sp, "Selecciona la nueva cantidad", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-warning-shield-24.png"));
                    if(resultadoEdicion == JOptionPane.YES_OPTION){
                        nuevaCantidad= (int)Math.round(Double.parseDouble(sp.getValue().toString()));
                        if(DiarioFacilTester.diarioFacil.editItemCarrito(Integer.parseInt(tblCarrito.getValueAt(tblCarrito.getSelectedRow(), 0).toString()),lblCarritoNombre.getText(),Constantes.USUARIOLOGUEADO,tblCarrito.getValueAt(tblCarrito.getSelectedRow(), 1).toString(), nuevaCantidad,(boolean)tblCarrito.getValueAt(tblCarrito.getSelectedRow(), 4))){
                            loadTable(DiarioFacilTester.diarioFacil.carritoSeleccionado(cbCarritos.getSelectedItem().toString(),Constantes.USUARIOLOGUEADO));
                        }else{
                            JOptionPane.showMessageDialog(null,"Ocurrio un error,no pudo editarse el item","Sys",JOptionPane.INFORMATION_MESSAGE,new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
                        }   
                    }
                }
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        //Limpiar carrito
        if(cbCarritos.getSelectedIndex()>-1){
          int resultado =JOptionPane.showConfirmDialog(null, "Realmente desea limpiar el carrito?", "Sys", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-warning-shield-24.png"));  
          if(resultado==JOptionPane.YES_OPTION){
              DiarioFacilTester.diarioFacil.cleanCarrito(cbCarritos.getSelectedItem().toString(),Constantes.USUARIOLOGUEADO);
              loadTable(DiarioFacilTester.diarioFacil.carritoSeleccionado(cbCarritos.getSelectedItem().toString(),Constantes.USUARIOLOGUEADO));
          }
        }
    }//GEN-LAST:event_btnCleanActionPerformed

    private void btnClean1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClean1ActionPerformed
    // <editor-fold defaultstate="collapsed" desc="Variables">    
            CarritoCompras carrito= DiarioFacilTester.diarioFacil.carritoSeleccionado(lblCarritoNombre.getText(),Constantes.USUARIOLOGUEADO ).get(0);
           /*Lista de Items en carrito*/
           List<Item> productoDummy = carrito.getProductos();
           List<Categoria> dummyCategoria = DiarioFacilTester.diarioFacil.getInventario();
            /*Lista de Items en Genarl*/
           List<Producto> dummyProductos = new ArrayList<>();
           boolean check = false;
           /*Lista de Promociones*/
          String nombreCompleto = Constantes.USUARIOLOGUEADO.getNombre()+" "+ Constantes.USUARIOLOGUEADO.getApellido();
          String fecha = String.valueOf(Date.from(Instant.now()));
          int numCompra = 1;
        // </editor-fold>  
           
     // <editor-fold defaultstate="collapsed" desc="Traer lista de Productos">   
           /*-------------------------------------------------*/
           /*Trae la lista de Productos en general*/
           for(int inv=0; inv < dummyCategoria.size() ; inv++){
            List<Producto> productosDentro = dummyCategoria.get(inv).getProductos();
                for(int pd=0; pd < productosDentro.size();pd++){
                     dummyProductos.add(productosDentro.get(pd));
                }
           }
           /*----------------------------------------------*/
  // </editor-fold>  
           
      // <editor-fold defaultstate="collapsed" desc="Funcion">     
           /*Check y agregacion de la compra*/
           for(int i=0; i < productoDummy.size() ; i++){
               /*Extrae de la lista del carrito de productos el nombre y la cantidad oredenada de cada uno*/
              Producto productoLista = productoDummy.get(i).getProducto();
              String nombreLista = productoLista.getNombre();
              int cantidadLista = productoDummy.get(i).getCantidad();
              /*Recorre la lista de Productos en general*/
              
             for(int y=0;y < dummyProductos.size();y++){
                 /*Verifica que el nombre del producto sea igual al de lista :Productos*/
                 if( dummyProductos.get(y).getNombre().equals(nombreLista)){
                     /*Verifica si la cantidad de la lista es menor o igual : Productos*/
                     if(cantidadLista <= dummyProductos.get(y).getExistencias()){
                      check = false; 
                       DiarioFacilTester.diarioFacil.reducirExcistencias(dummyProductos.get(y),cantidadLista);
                     }else{
                      JOptionPane.showMessageDialog(null,"La cantidad del producto: "+nombreLista +" excede nuestras existencias. El numero en inventario es de: "+dummyProductos.get(y).getExistencias());
                      check = true;
                      i =  productoDummy.size()+1;
                     }/*Resultado negativo : Productos*/
                 }/*Fin de Igualdad de Productos : Productos*/
             } /*Fin de Revision de Productos*/
               
           }
           /*-------------------------------------------*/
           
           // </editor-fold> 
      // <editor-fold defaultstate="collapsed" desc="Factura">      
       if(check == false){
           /*Cambiar Numero de Compra*/ 
           Compra compra = new Compra(Constantes.USUARIOLOGUEADO,numCompra,carrito,Date.from(Instant.now()));
            
            double total=0;
            String out = generarFactura(lblCarritoNombre.getText(),nombreCompleto,fecha );
            
            for(int i=0; i < productoDummy.size() ; i++){
                
               Producto prod =productoDummy.get(i).getProducto();
               
               if(prod instanceof Promocion){
                    out+=" Consecutivo: "+productoDummy.get(i).getConsecutivo()+"    Producto: "+prod.getNombre()+"    Precio: "+((Promocion)prod).getPrecioPromocional()+"\n";
                    total +=((Promocion)prod).getPrecioPromocional();
               }else{
                   out+=" Consecutivo: "+productoDummy.get(i).getConsecutivo()+"    Producto: "+prod.getNombre()+"    Precio: "+prod.getPrecio()+"\n";
                   total += prod.getPrecio();
               }
            }
            out+="Total: "+total;
            DiarioFacilTester.diarioFacil.addCompra(compra);
            numCompra++;
            JOptionPane.showMessageDialog(null,"Compra realizada con  éxito!");
            System.out.println(out);
       }
        // </editor-fold> 
    }//GEN-LAST:event_btnClean1ActionPerformed
    
    public String generarFactura(String NombreCarrito, String NombreCliente, String Fecha){
        String out="   ---- F A C T U R A ---   \n"
                + "Nombre: "+NombreCliente+"          Fecha: "+Fecha+"\n"
                +"Carrito: "+NombreCarrito+"\n"
                +"   ---- Detalle: ---   \n"; 
        return out;
    }
    
 
    
    private void rSButtonRiple2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonRiple2ActionPerformed
        // TODO add your handling code here:
        if(txtNewCarrito.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"El carrito necesita un nombre!","Sys",JOptionPane.INFORMATION_MESSAGE,new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
        }else{
            //Creando carrito
            if(DiarioFacilTester.diarioFacil.create(new CarritoCompras(Date.from(Instant.now()),Constantes.USUARIOLOGUEADO,txtNewCarrito.getText(),0))){
                //Carrito creado exitosamente
                System.out.println(""+DiarioFacilTester.diarioFacil.getCarritos().get(0).getNombreCarrito());
                JOptionPane.showMessageDialog(null,"Carrito creado exitosamente!","Sys",JOptionPane.INFORMATION_MESSAGE,new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-ok-24.png"));
                //Cargar carrito
                loadCombo();
                
            }else{
                //Fallo al crear carrito
                JOptionPane.showMessageDialog(null,"Error al crear el carrito!","Sys",JOptionPane.INFORMATION_MESSAGE,new ImageIcon("src/edu/ulatina/ejemplos/img/icons8-error-32.png"));
            }
        }
    }//GEN-LAST:event_rSButtonRiple2ActionPerformed

    private void cbCarritosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCarritosItemStateChanged
        if(cbCarritos.getItemCount()>0){
            lblCarritoNombre.setText(cbCarritos.getSelectedItem().toString());
            loadTable(DiarioFacilTester.diarioFacil.carritoSeleccionado(cbCarritos.getSelectedItem().toString(),Constantes.USUARIOLOGUEADO));
            tblCarrito.setModel(model);
        }
    }//GEN-LAST:event_cbCarritosItemStateChanged

    private void btnClean2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClean2ActionPerformed
        // TODO add your handling code here:
        if(cbCarritos.getItemCount()>0){
          if(cbCarritos.getSelectedIndex()>-1){
              DiarioFacilTester.diarioFacil.delete(-1, new CarritoCompras(Date.from(Instant.now()),Constantes.USUARIOLOGUEADO,cbCarritos.getSelectedItem().toString(),-1));
              //Cargar combo
              loadCombo();
              if(cbCarritos.getItemCount()==0){
                DefaultTableModel  model = new DefaultTableModel(){
                    @Override
                    public boolean isCellEditable(int row,int column){
                        return false;
                    }
                };
                model.addColumn("Consecutivo");
                model.addColumn("Producto");
                model.addColumn("Cantidad");
                model.addColumn("Precio unidad");
                model.addColumn("Comprado en promocion");
                model.addColumn("Sub total");
                tblCarrito.setModel(model);
                lblCarritoNombre.setText("Nombre carrito");
                lblSubtotal.setText("000000");
                lblTotal.setText("000000");
              }
          }
        }
    }//GEN-LAST:event_btnClean2ActionPerformed

    private void rSButtonRiple1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonRiple1ActionPerformed
       
    }//GEN-LAST:event_rSButtonRiple1ActionPerformed

    private void txtBuscarCarritoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarCarritoKeyTyped
        // TODO add your handling code here:
        List<CarritoCompras> dummy = new ArrayList<>();
        CarritoCompras car  = new CarritoCompras();
        car.setCliente(Constantes.USUARIOLOGUEADO);
        car.setProductos(DiarioFacilTester.diarioFacil.searchCarrito(txtBuscarCarrito.getText(),lblCarritoNombre.getText(), Constantes.USUARIOLOGUEADO));
        dummy.add(car);
        loadTable(dummy);
    }//GEN-LAST:event_txtBuscarCarritoKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSButtonIconI btnClean;
    private rojerusan.RSButtonIconI btnClean1;
    private rojerusan.RSButtonIconI btnClean2;
    private rojerusan.RSButtonIconI btnDelete;
    private rojerusan.RSButtonIconI btnEdit;
    private rojerusan.RSComboMetro cbCarritos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCarritoNombre;
    private javax.swing.JLabel lblSubtotal;
    private javax.swing.JLabel lblTotal;
    private rojeru_san.RSButtonRiple rSButtonRiple1;
    private rojeru_san.RSButtonRiple rSButtonRiple2;
    private rojerusan.RSTableMetro tblCarrito;
    private rojeru_san.RSMTextFull txtBuscarCarrito;
    private rojeru_san.RSMTextFull txtNewCarrito;
    // End of variables declaration//GEN-END:variables
}
